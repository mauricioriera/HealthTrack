
# Creado por https://www.toptal.com/developers/gitignore/api/python,django,pycharm+all,venv
# Editar en https://www.toptal.com/developers/gitignore?templates=python,django,pycharm+all,venv

### Django ###
*.registro
*.maceta
*.pyc
__pycache__/
configuración_local.py
db.sqlite3
db.sqlite3-diario
medios de comunicación

# Si su proceso de compilación incluye la ejecución de Collectstatic, entonces probablemente no necesite o no quiera incluir archivos estáticos/
# en tu repositorio de Git. Actualice y descomente la siguiente línea en consecuencia.
# <nombre-proyecto-django>/staticfiles/

### Pila Django.Python ###
# Archivos DLL / optimizados / compilados en bytes
*.py[bacalao]
*$py.clase

# extensiones C
*.entonces

# Distribución / embalaje
.Pitón
construir/
desarrollar-huevos/
dist/
descargas/
huevos/
.huevos/
biblioteca/
lib64/
partes/
distrito/
var/
ruedas/
compartir/ruedas-python/
*.egg-info/
.instalado.cfg
*.huevo
MANIFIESTO

#PyInstaller
# Por lo general, estos archivos se escriben mediante un script de Python a partir de una plantilla.
# antes de que PyInstaller construya el exe, para inyectarle la fecha/otra información.
*.manifiesto
*.Especificaciones

# Registros del instalador
pip-log.txt
pip-eliminar-este-directorio.txt

# Prueba unitaria / informes de cobertura
htmlcov/
.tox/
.nox/
.cobertura
.cobertura.*
.cache
pruebas nasales.xml
cobertura.xml
*.cubrir
*.py,cubierta
.hipótesis/
.pytest_cache/
cubrir/

# Traducciones
*.mes

# Cosas de Django:

# Cosas del matraz:
instancia/
.webassets-caché

# Cosas chatarras:
.rasposo

# Documentación de la esfinge
documentos/_build/

#PyBuilder
.pybuilder/
objetivo/

# Cuaderno Jupyter
.ipynb_checkpoints

# IPython
perfil_predeterminado/
ipython_config.py

#pyenv
# Para una biblioteca o paquete, es posible que desee ignorar estos archivos ya que el código es
# pensado para ejecutarse en múltiples entornos; en caso contrario, consúltelos en:
# .python-versión

#pipenv
# Según pypa/pipenv#598, se recomienda incluir Pipfile.lock en el control de versiones.
# Sin embargo, en caso de colaboración, si hay dependencias o dependencias específicas de la plataforma
# al no tener soporte multiplataforma, pipenv puede instalar dependencias que no funcionan o no
# instalar todas las dependencias necesarias.
#Pipfile.bloqueo

# poesía
# Similar a Pipfile.lock, generalmente se recomienda incluir poesía.lock en el control de versiones.
# Esto se recomienda especialmente para paquetes binarios para garantizar la reproducibilidad y es más
# comúnmente ignorado por las bibliotecas.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poesía.bloqueo

#pdm
# Similar a Pipfile.lock, generalmente se recomienda incluir pdm.lock en el control de versiones.
#pdm.bloqueo
# pdm almacena configuraciones de todo el proyecto en .pdm.toml, pero se recomienda no incluirlo
# en control de versiones.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

#PEP 582; utilizado, por ejemplo, por github.com/David-OConnor/pyflow y github.com/pdm-project/pdm
__pypackages__/

# Cosas de apio
calendario-de-apio
apiobeat.pid

# Archivos analizados por SageMath
*.sabio.py

# Ambientes
.env
.venv
entorno/
venv/
ENV/
env.bak/
venv.bak/

# Configuración del proyecto Spyder
.proyecto spyder
.proyecto espía

# Configuración del proyecto de cuerda
.proyecto de cuerda

# documentación mkdocs
/sitio

#mipy
.mypy_cache/
.dmypy.json
dmypy.json

# Comprobador de tipo pira
.pira/

# analizador de tipo estático pytype
.pytipo/

# Símbolos de depuración de Cython
cython_debug/

#PyCharm
# La plantilla específica de JetBrains se mantiene en un JetBrains.gitignore separado que puede
# se encuentra en https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# y se puede agregar al gitignore global o fusionar en este archivo. Por una política más nuclear
# opción (no recomendada), puede descomentar lo siguiente para ignorar toda la carpeta de ideas.
#.idea/

### PyCharm+todos ###
# Cubre los IDE de JetBrains: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm y Rider
# Referencia: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# Cosas específicas del usuario
.idea/**/espacio de trabajo.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/diccionarios
.idea/**/estante

# AWS Específico del usuario
.idea/**/aws.xml

# archivos generados
.idea/**/contentModel.xml

# Archivos sensibles o de alta rotación
.idea/**/fuentes de datos/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

#Gradle
.idea/**/gradle.xml
.idea/**/bibliotecas

# Gradle y Maven con importación automática
# Cuando utilice Gradle o Maven con importación automática, debe excluir los archivos del módulo,
# ya que se volverán a crear y pueden provocar abandono. Descomentar si se usa
# importación automática.
# .idea/artefactos
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/módulos
# *.iml
# *.ipr

# Chacer
cmake-build-*/

# Complemento Mongo Explorer
.idea/**/mongoSettings.xml

# Formato de proyecto basado en archivos
*.iws

#IntelliJ
afuera/

# complemento mpeltonen/sbt-idea
.idea_modules/

# Complemento JIRA
complemento-ide-atlassian.xml

# Complemento de Clojure cursiva
.idea/replstate.xml

# Complemento SonarLint
.idea/sonarlint/

# Complemento Crashlytics (para Android Studio e IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
propiedades.de.tela

# Cliente de descanso basado en editor
.idea/httpSolicitudes

# Archivo de caché serializado de Android Studio 3.1+
.idea/caches/build_file_checksums.ser

### PyCharm+todos los parches ###
# Ignorar todo menos la configuración de estilo de código y ejecutar configuraciones
# que se supone que deben compartirse dentro de los equipos.

.idea/*

!.idea/codeStyles
!.idea/runConfiguraciones

### Pitón ###
# Archivos DLL / optimizados / compilados en bytes

# extensiones C

# Distribución / embalaje

#PyInstaller
# Por lo general, estos archivos se escriben mediante un script de Python a partir de una plantilla.
# antes de que PyInstaller construya el exe, para inyectarle la fecha/otra información.

# Registros del instalador

# Prueba unitaria / informes de cobertura

# Traducciones

# Cosas de Django:

# Cosas del matraz:

# Cosas chatarras:

# Documentación de la esfinge

#PyBuilder

# Cuaderno Jupyter

# IPython

#pyenv
# Para una biblioteca o paquete, es posible que desee ignorar estos archivos ya que el código es
# pensado para ejecutarse en múltiples entornos; en caso contrario, consúltelos en:
# .python-versión

#pipenv
# Según pypa/pipenv#598, se recomienda incluir Pipfile.lock en el control de versiones.
# Sin embargo, en caso de colaboración, si hay dependencias o dependencias específicas de la plataforma
# al no tener soporte multiplataforma, pipenv puede instalar dependencias que no funcionan o no
# instalar todas las dependencias necesarias.

# poesía
# Similar a Pipfile.lock, generalmente se recomienda incluir poesía.lock en el control de versiones.
# Esto se recomienda especialmente para paquetes binarios para garantizar la reproducibilidad y es más
# comúnmente ignorado por las bibliotecas.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control

#pdm
# Similar a Pipfile.lock, generalmente se recomienda incluir pdm.lock en el control de versiones.
# pdm almacena configuraciones de todo el proyecto en .pdm.toml, pero se recomienda no incluirlo
# en control de versiones.
# https://pdm.fming.dev/#use-with-ide

#PEP 582; utilizado, por ejemplo, por github.com/David-OConnor/pyflow y github.com/pdm-project/pdm

# Cosas de apio

# Archivos analizados por SageMath

# Ambientes

# Configuración del proyecto Spyder

# Configuración del proyecto de cuerda

# documentación mkdocs

#mipy

# Comprobador de tipo pira

# analizador de tipo estático pytype

# Símbolos de depuración de Cython

#PyCharm
# La plantilla específica de JetBrains se mantiene en un JetBrains.gitignore separado que puede
# se encuentra en https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# y se puede agregar al gitignore global o fusionar en este archivo. Por una política más nuclear
# opción (no recomendada), puede descomentar lo siguiente para ignorar toda la carpeta de ideas.

### Parche de Python ###
# Archivo de configuración local de poesía: https://python-poetry.org/docs/configuration/#local-configuration
poesía.toml

# fallar
.ruff_cache/

# archivos de configuración LSP
pyrightconfig.json

### venv ###
# entorno virtual
# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/
[Si bemol]en
[Incluyo
[Ll]ib
[Ll]ib64
[L]local
[Ss]cripts
pyvenv.cfg
pip-selfcheck.json

# Fin de https://www.toptal.com/developers/gitignore/api/python,django,pycharm+all,venv
